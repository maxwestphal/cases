[{"path":"https://maxwestphal.github.io/cases/articles/example_wdbc.html","id":"preparation","dir":"Articles","previous_headings":"","what":"Preparation","title":"Real-world example: biomarker assessment and prediction model evaluation","text":"Load package:","code":"## load packages: library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(splitstackshape) library(glmnet) #> Loading required package: Matrix #> Loaded glmnet 4.1-8 library(cases)"},{"path":"https://maxwestphal.github.io/cases/articles/example_wdbc.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Real-world example: biomarker assessment and prediction model evaluation","text":"utilize breast cancer wisconsin (diagnostic) data set.","code":"# ?data_wdbc data <- data_wdbc dim(data) #> [1] 569  31  table(data$diagnosis) #>  #>   0   1  #> 357 212  ## Missing values? colSums(is.na(data)) # -> no missing values #>              diagnosis            radius_mean           texture_mean  #>                      0                      0                      0  #>         perimeter_mean              area_mean        smoothness_mean  #>                      0                      0                      0  #>       compactness_mean         concavity_mean    concave_points_mean  #>                      0                      0                      0  #>          symmetry_mean fractal_dimension_mean              radius_sd  #>                      0                      0                      0  #>             texture_sd           perimeter_sd                area_sd  #>                      0                      0                      0  #>          smoothness_sd         compactness_sd           concavity_sd  #>                      0                      0                      0  #>      concave_points_sd            symmetry_sd   fractal_dimension_sd  #>                      0                      0                      0  #>            radius_peak           texture_peak         perimeter_peak  #>                      0                      0                      0  #>              area_peak        smoothness_peak       compactness_peak  #>                      0                      0                      0  #>         concavity_peak    concave_points_peak          symmetry_peak  #>                      0                      0                      0  #> fractal_dimension_peak  #>                      0 summary(data) #>  diagnosis  radius_mean      texture_mean   perimeter_mean     area_mean      #>  0:357     Min.   : 6.981   Min.   : 9.71   Min.   : 43.79   Min.   : 143.5   #>  1:212     1st Qu.:11.700   1st Qu.:16.17   1st Qu.: 75.17   1st Qu.: 420.3   #>            Median :13.370   Median :18.84   Median : 86.24   Median : 551.1   #>            Mean   :14.127   Mean   :19.29   Mean   : 91.97   Mean   : 654.9   #>            3rd Qu.:15.780   3rd Qu.:21.80   3rd Qu.:104.10   3rd Qu.: 782.7   #>            Max.   :28.110   Max.   :39.28   Max.   :188.50   Max.   :2501.0   #>  smoothness_mean   compactness_mean  concavity_mean    concave_points_mean #>  Min.   :0.05263   Min.   :0.01938   Min.   :0.00000   Min.   :0.00000     #>  1st Qu.:0.08637   1st Qu.:0.06492   1st Qu.:0.02956   1st Qu.:0.02031     #>  Median :0.09587   Median :0.09263   Median :0.06154   Median :0.03350     #>  Mean   :0.09636   Mean   :0.10434   Mean   :0.08880   Mean   :0.04892     #>  3rd Qu.:0.10530   3rd Qu.:0.13040   3rd Qu.:0.13070   3rd Qu.:0.07400     #>  Max.   :0.16340   Max.   :0.34540   Max.   :0.42680   Max.   :0.20120     #>  symmetry_mean    fractal_dimension_mean   radius_sd        texture_sd     #>  Min.   :0.1060   Min.   :0.04996        Min.   :0.1115   Min.   :0.3602   #>  1st Qu.:0.1619   1st Qu.:0.05770        1st Qu.:0.2324   1st Qu.:0.8339   #>  Median :0.1792   Median :0.06154        Median :0.3242   Median :1.1080   #>  Mean   :0.1812   Mean   :0.06280        Mean   :0.4052   Mean   :1.2169   #>  3rd Qu.:0.1957   3rd Qu.:0.06612        3rd Qu.:0.4789   3rd Qu.:1.4740   #>  Max.   :0.3040   Max.   :0.09744        Max.   :2.8730   Max.   :4.8850   #>   perimeter_sd       area_sd        smoothness_sd      compactness_sd     #>  Min.   : 0.757   Min.   :  6.802   Min.   :0.001713   Min.   :0.002252   #>  1st Qu.: 1.606   1st Qu.: 17.850   1st Qu.:0.005169   1st Qu.:0.013080   #>  Median : 2.287   Median : 24.530   Median :0.006380   Median :0.020450   #>  Mean   : 2.866   Mean   : 40.337   Mean   :0.007041   Mean   :0.025478   #>  3rd Qu.: 3.357   3rd Qu.: 45.190   3rd Qu.:0.008146   3rd Qu.:0.032450   #>  Max.   :21.980   Max.   :542.200   Max.   :0.031130   Max.   :0.135400   #>   concavity_sd     concave_points_sd   symmetry_sd       fractal_dimension_sd #>  Min.   :0.00000   Min.   :0.000000   Min.   :0.007882   Min.   :0.0008948    #>  1st Qu.:0.01509   1st Qu.:0.007638   1st Qu.:0.015160   1st Qu.:0.0022480    #>  Median :0.02589   Median :0.010930   Median :0.018730   Median :0.0031870    #>  Mean   :0.03189   Mean   :0.011796   Mean   :0.020542   Mean   :0.0037949    #>  3rd Qu.:0.04205   3rd Qu.:0.014710   3rd Qu.:0.023480   3rd Qu.:0.0045580    #>  Max.   :0.39600   Max.   :0.052790   Max.   :0.078950   Max.   :0.0298400    #>   radius_peak     texture_peak   perimeter_peak     area_peak      #>  Min.   : 7.93   Min.   :12.02   Min.   : 50.41   Min.   : 185.2   #>  1st Qu.:13.01   1st Qu.:21.08   1st Qu.: 84.11   1st Qu.: 515.3   #>  Median :14.97   Median :25.41   Median : 97.66   Median : 686.5   #>  Mean   :16.27   Mean   :25.68   Mean   :107.26   Mean   : 880.6   #>  3rd Qu.:18.79   3rd Qu.:29.72   3rd Qu.:125.40   3rd Qu.:1084.0   #>  Max.   :36.04   Max.   :49.54   Max.   :251.20   Max.   :4254.0   #>  smoothness_peak   compactness_peak  concavity_peak   concave_points_peak #>  Min.   :0.07117   Min.   :0.02729   Min.   :0.0000   Min.   :0.00000     #>  1st Qu.:0.11660   1st Qu.:0.14720   1st Qu.:0.1145   1st Qu.:0.06493     #>  Median :0.13130   Median :0.21190   Median :0.2267   Median :0.09993     #>  Mean   :0.13237   Mean   :0.25427   Mean   :0.2722   Mean   :0.11461     #>  3rd Qu.:0.14600   3rd Qu.:0.33910   3rd Qu.:0.3829   3rd Qu.:0.16140     #>  Max.   :0.22260   Max.   :1.05800   Max.   :1.2520   Max.   :0.29100     #>  symmetry_peak    fractal_dimension_peak #>  Min.   :0.1565   Min.   :0.05504        #>  1st Qu.:0.2504   1st Qu.:0.07146        #>  Median :0.2822   Median :0.08004        #>  Mean   :0.2901   Mean   :0.08395        #>  3rd Qu.:0.3179   3rd Qu.:0.09208        #>  Max.   :0.6638   Max.   :0.20750 ## define minimal acceptable criteria for specificity, sensitivity: sp0 <- 0.7 se0 <- 0.9 benchmark <- c(sp0, se0)"},{"path":"https://maxwestphal.github.io/cases/articles/example_wdbc.html","id":"scenario-a-biomarker-assessment","dir":"Articles","previous_headings":"","what":"Scenario A: Biomarker assessment","title":"Real-world example: biomarker assessment and prediction model evaluation","text":"","code":"pr <- seq(0, 1, 0.1)  quantile(data$area_peak, pr) # 500, 600, 700, 800, 900 ---> area #>      0%     10%     20%     30%     40%     50%     60%     70%     80%     90%  #>  185.20  384.72  475.98  544.14  599.70  686.50  781.18  926.96 1269.00 1673.00  #>    100%  #> 4254.00 quantile(data$compactness_peak, pr) # 0.10, 0.15, 0.20, 0.25, 0.30 ---> compactness (perimeter^2 / area - 1.0) #>       0%      10%      20%      30%      40%      50%      60%      70%  #> 0.027290 0.093676 0.125660 0.161400 0.184620 0.211900 0.251400 0.303960  #>      80%      90%     100%  #> 0.367060 0.447840 1.058000 quantile(data$concavity_peak, pr) # 0.10, 0.15, 0.20, 0.25, 0.30 ---> concavity (severity of concave portions of the contour) #>       0%      10%      20%      30%      40%      50%      60%      70%  #> 0.000000 0.045652 0.091974 0.136880 0.177180 0.226700 0.286600 0.349920  #>      80%      90%     100%  #> 0.419540 0.571320 1.252000 cc <- c(   500, 600, 700, 800, 900,   0.10, 0.15, 0.20, 0.25, 0.30,   0.10, 0.15, 0.20, 0.25, 0.30 ) comp_bm <- data %>%   dplyr::select(area_peak, compactness_peak, concavity_peak) %>%   cases::categorize(cc, rep(1:3, each = 5)) %>%   cases::compare(labels = as.numeric(as.character(data$diagnosis)))  results_bm <- cases::evaluate(comp_bm,   benchmark = benchmark,   alternative = \"greater\", alpha = 0.025,   adj = \"boot\", regu = 1 ) #> Drawing 2000 'pairs' bootstrap samples... results_bm #> [cases] evaluation results: #> $specificity #>                parameter hypothesis estimate  lower upper    tstat   pval #> 1          area_peak_500     <= 0.7   0.3645 0.2904   Inf -13.2067 1.0000 #> 2          area_peak_600     <= 0.7   0.6243 0.5497   Inf  -2.9615 1.0000 #> 3          area_peak_700     <= 0.7   0.8059 0.7450   Inf   5.0713 0.0000 #> 4          area_peak_800     <= 0.7   0.9064 0.8616   Inf  13.4296 0.0000 #> 5          area_peak_900     <= 0.7   0.9763 0.9528   Inf  34.3804 0.0000 #> 6   compactness_peak_0.1     <= 0.7   0.1913 0.1308   Inf -24.5012 1.0000 #> 7  compactness_peak_0.15     <= 0.7   0.3980 0.3227   Inf -11.6880 1.0000 #> 8   compactness_peak_0.2     <= 0.7   0.6466 0.5731   Inf  -2.1148 1.0000 #> 9  compactness_peak_0.25     <= 0.7   0.7975 0.7356   Inf   4.5962 0.0000 #> 10  compactness_peak_0.3     <= 0.7   0.8925 0.8448   Inf  11.7707 0.0000 #> 11    concavity_peak_0.1     <= 0.7   0.3422 0.2691   Inf -14.2900 1.0000 #> 12   concavity_peak_0.15     <= 0.7   0.5321 0.4553   Inf  -6.3748 1.0000 #> 13    concavity_peak_0.2     <= 0.7   0.7221 0.6531   Inf   0.9333 0.7945 #> 14   concavity_peak_0.25     <= 0.7   0.8059 0.7450   Inf   5.0713 0.0000 #> 15    concavity_peak_0.3     <= 0.7   0.8673 0.8151   Inf   9.3454 0.0000 #>    reject pval_all reject_all #> 1   FALSE   1.0000      FALSE #> 2   FALSE   1.0000      FALSE #> 3    TRUE   0.0005       TRUE #> 4    TRUE   1.0000      FALSE #> 5    TRUE   1.0000      FALSE #> 6   FALSE   1.0000      FALSE #> 7   FALSE   1.0000      FALSE #> 8   FALSE   1.0000      FALSE #> 9    TRUE   1.0000      FALSE #> 10   TRUE   1.0000      FALSE #> 11  FALSE   1.0000      FALSE #> 12  FALSE   1.0000      FALSE #> 13  FALSE   0.7945      FALSE #> 14   TRUE   0.9830      FALSE #> 15   TRUE   1.0000      FALSE #>  #> $sensitivity #>                parameter hypothesis estimate  lower upper   tstat   pval reject #> 1          area_peak_500     <= 0.9   0.9977 0.9880   Inf 29.5193 0.0000   TRUE #> 2          area_peak_600     <= 0.9   0.9742 0.9426   Inf  6.8419 0.0000   TRUE #> 3          area_peak_700     <= 0.9   0.9601 0.9211   Inf  4.4912 0.0005   TRUE #> 4          area_peak_800     <= 0.9   0.8850 0.8214   Inf -0.6888 1.0000  FALSE #> 5          area_peak_900     <= 0.9   0.8052 0.7262   Inf -3.5027 1.0000  FALSE #> 6   compactness_peak_0.1     <= 0.9   0.9836 0.9582   Inf  9.6161 0.0000   TRUE #> 7  compactness_peak_0.15     <= 0.9   0.9648 0.9280   Inf  5.1422 0.0000   TRUE #> 8   compactness_peak_0.2     <= 0.9   0.8756 0.8098   Inf -1.0821 1.0000  FALSE #> 9  compactness_peak_0.25     <= 0.9   0.7441 0.6571   Inf -5.2256 1.0000  FALSE #> 10  compactness_peak_0.3     <= 0.9   0.6362 0.5402   Inf -8.0227 1.0000  FALSE #> 11    concavity_peak_0.1     <= 0.9   0.9883 0.9668   Inf 11.9886 0.0000   TRUE #> 12   concavity_peak_0.15     <= 0.9   0.9789 0.9502   Inf  8.0234 0.0000   TRUE #> 13    concavity_peak_0.2     <= 0.9   0.9695 0.9352   Inf  5.9095 0.0000   TRUE #> 14   concavity_peak_0.25     <= 0.9   0.9038 0.8449   Inf  0.1863 0.9830  FALSE #> 15    concavity_peak_0.3     <= 0.9   0.8052 0.7262   Inf -3.5027 1.0000  FALSE #>    pval_all reject_all #> 1    1.0000      FALSE #> 2    1.0000      FALSE #> 3    0.0005       TRUE #> 4    1.0000      FALSE #> 5    1.0000      FALSE #> 6    1.0000      FALSE #> 7    1.0000      FALSE #> 8    1.0000      FALSE #> 9    1.0000      FALSE #> 10   1.0000      FALSE #> 11   1.0000      FALSE #> 12   1.0000      FALSE #> 13   0.7945      FALSE #> 14   0.9830      FALSE #> 15   1.0000      FALSE visualize(results_bm)"},{"path":"https://maxwestphal.github.io/cases/articles/example_wdbc.html","id":"scenario-b-prediction-model-evaluation","dir":"Articles","previous_headings":"","what":"Scenario B: Prediction model evaluation","title":"Real-world example: biomarker assessment and prediction model evaluation","text":"","code":"## data splitting: set.seed(1337) split <- stratified(data, c(\"diagnosis\"), 1 / 3, bothSets = TRUE) val <- split[[1]] %>% as.data.frame() trn <- split[[2]] %>% as.data.frame() dim(trn) #> [1] 379  31 dim(val) #> [1] 190  31 table(val$diagnosis) #>  #>   0   1  #> 119  71 ## train example model mod <- glmnet(x = trn[, -1], y = trn[, 1], family = \"binomial\", alpha = 0.25) str(mod, 0) #> List of 13 #>  - attr(*, \"class\")= chr [1:2] \"lognet\" \"glmnet\" set.seed(1337)  ## define hyperparameter values for L1/L2 penalty mixing parameter (alpha): aa <- c(0, 0.25, 0.5, 0.75, 1)  ## train models and create predictions: pred_pm <- sapply(aa, function(alpha) {   mod_pm <- cv.glmnet(     x = as.matrix(trn[, -1]), y = trn[, 1],     family = \"binomial\",     type.measure = \"class\",     alpha = alpha   )   message(paste0(\"cv.glmnet (alpha = \", alpha, \"):\"))   print(mod_pm)   message(\"+++++\")   predict(mod_pm, as.matrix(val[, -1]), type = \"response\") }) #> cv.glmnet (alpha = 0): #>  #> Call:  cv.glmnet(x = as.matrix(trn[, -1]), y = trn[, 1], type.measure = \"class\",      family = \"binomial\", alpha = alpha)  #>  #> Measure: Misclassification Error  #>  #>      Lambda Index Measure       SE Nonzero #> min 0.03847   100 0.01847 0.006853      30 #> 1se 0.04634    98 0.02375 0.008289      30 #> +++++ #> cv.glmnet (alpha = 0.25): #>  #> Call:  cv.glmnet(x = as.matrix(trn[, -1]), y = trn[, 1], type.measure = \"class\",      family = \"binomial\", alpha = alpha)  #>  #> Measure: Misclassification Error  #>  #>       Lambda Index Measure       SE Nonzero #> min 0.004383    64 0.01055 0.004299      27 #> 1se 0.012195    53 0.01319 0.005888      23 #> +++++ #> cv.glmnet (alpha = 0.5): #>  #> Call:  cv.glmnet(x = as.matrix(trn[, -1]), y = trn[, 1], type.measure = \"class\",      family = \"binomial\", alpha = alpha)  #>  #> Measure: Misclassification Error  #>  #>       Lambda Index Measure       SE Nonzero #> min 0.004612    56 0.01055 0.008061      22 #> 1se 0.012834    45 0.01847 0.008869      19 #> +++++ #> cv.glmnet (alpha = 0.75): #>  #> Call:  cv.glmnet(x = as.matrix(trn[, -1]), y = trn[, 1], type.measure = \"class\",      family = \"binomial\", alpha = alpha)  #>  #> Measure: Misclassification Error  #>  #>       Lambda Index  Measure       SE Nonzero #> min 0.002802    57 0.007916 0.004023      19 #> 1se 0.009391    44 0.010554 0.005824      18 #> +++++ #> cv.glmnet (alpha = 1): #>  #> Call:  cv.glmnet(x = as.matrix(trn[, -1]), y = trn[, 1], type.measure = \"class\",      family = \"binomial\", alpha = alpha)  #>  #> Measure: Misclassification Error  #>  #>       Lambda Index Measure       SE Nonzero #> min 0.003672    51 0.01319 0.005888      13 #> 1se 0.005328    47 0.01847 0.008822      11 #> +++++ colnames(pred_pm) <- paste0(\"en\", aa * 100) head(pred_pm) #>            en0      en25      en50      en75     en100 #> [1,] 0.9747700 0.9961507 0.9938921 0.9964515 0.9992168 #> [2,] 0.9996722 0.9999897 0.9999674 0.9999877 0.9999995 #> [3,] 0.9142164 0.9763833 0.9698399 0.9816259 0.9949924 #> [4,] 0.9955105 0.9995248 0.9991571 0.9995259 0.9999234 #> [5,] 0.9559590 0.9885991 0.9807955 0.9856935 0.9949629 #> [6,] 0.7573470 0.7981572 0.7785671 0.7485468 0.6770751 ## define cutpoints (probability scale): cc <- rep(seq(0.1, 0.5, 0.1), 5) mm <- rep(1:5, each = 5)  ## create predictions: comp_pm <- pred_pm %>%   cases::categorize(cc, mm) %>%   cases::compare(labels = as.numeric(as.character(val$diagnosis))) str(comp_pm, 1) #> List of 2 #>  $ specificity:'data.frame': 119 obs. of  25 variables: #>  $ sensitivity:'data.frame': 71 obs. of  25 variables: ## conduct statistical analysis: set.seed(1337) results_pm <- cases::evaluate(comp_pm,   benchmark = benchmark,   alternative = \"greater\", alpha = 0.025,   adj = \"boot\", regu = 1 ) #> Drawing 2000 'pairs' bootstrap samples... str(results_pm, 1) #> List of 2 #>  $ specificity:'data.frame': 25 obs. of  10 variables: #>  $ sensitivity:'data.frame': 25 obs. of  10 variables: #>  - attr(*, \"class\")= chr [1:2] \"list\" \"cases_results\" #>  - attr(*, \"n_obs\")= Named int [1:2] 119 71 #>   ..- attr(*, \"names\")= chr [1:2] \"specificity\" \"sensitivity\" #>  - attr(*, \"n_params\")= int 25 #>  - attr(*, \"n_groups\")= int 2 #>  - attr(*, \"critval\")= num [1:2] -3.63 Inf #>  - attr(*, \"alpha_adj\")= num 0.0095 #>  - attr(*, \"call\")=List of 8 results_pm %>% lapply(filter, reject_all) #> $specificity #>   parameter hypothesis  estimate     lower upper    tstat   pval reject #> 1  en25_0.1     <= 0.7 0.8541667 0.7375908   Inf 4.804890 0.0095   TRUE #> 2  en50_0.1     <= 0.7 0.8541667 0.7375908   Inf 4.804890 0.0095   TRUE #> 3  en75_0.1     <= 0.7 0.8708333 0.7600558   Inf 5.603025 0.0045   TRUE #> 4 en100_0.1     <= 0.7 0.8875000 0.7831315   Inf 6.527299 0.0040   TRUE #>   pval_all reject_all #> 1   0.0095       TRUE #> 2   0.0095       TRUE #> 3   0.0045       TRUE #> 4   0.0095       TRUE #>  #> $sensitivity #>   parameter hypothesis  estimate     lower upper    tstat   pval reject #> 1  en25_0.1     <= 0.9 0.9791667 0.9184304   Inf 4.735830 0.0095   TRUE #> 2  en50_0.1     <= 0.9 0.9930556 0.9577417   Inf 9.574106 0.0000   TRUE #> 3  en75_0.1     <= 0.9 0.9930556 0.9577417   Inf 9.574106 0.0000   TRUE #> 4 en100_0.1     <= 0.9 0.9791667 0.9184304   Inf 4.735830 0.0095   TRUE #>   pval_all reject_all #> 1   0.0095       TRUE #> 2   0.0095       TRUE #> 3   0.0045       TRUE #> 4   0.0095       TRUE visualize(results_pm)"},{"path":"https://maxwestphal.github.io/cases/articles/example_wdbc.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Real-world example: biomarker assessment and prediction model evaluation","text":"Westphal M, Zapf . Statistical inference diagnostic test accuracy studies multiple comparisons. Statistical Methods Medical Research. 2024;0(0). doi:10.1177/09622802241236933 “Breast Cancer Wisconsin (Diagnostic) Data Set” UCI Machine Learning Repository: https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(diagnostic)","code":""},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"preparation","dir":"Articles","previous_headings":"","what":"Preparation","title":"R package cases: overview","text":"Load package:","code":"library(cases)"},{"path":[]},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"categorize","dir":"Articles","previous_headings":"Important functions","what":"categorize()","title":"R package cases: overview","text":"Often, binary predictions readily available rather need derived continuous (risk) scores. can done via categorize function.","code":"# real data example from publication here set.seed(123) M <- as.data.frame(mvtnorm::rmvnorm(10, mean = rep(0, 3), sigma = 2 * diag(3))) M #>             V1         V2         V3 #> 1  -0.79263226 -0.3255201  2.2043464 #> 2   0.09971392  0.1828405  2.4254682 #> 3   0.65183395 -1.7890668 -0.9713566 #> 4  -0.63026120  1.7311131  0.5088536 #> 5   0.56677642  0.1565290 -0.7860781 #> 6   2.52707679  0.7040669 -2.7812167 #> 7   0.99186703 -0.6686280 -1.5101308 #> 8  -0.30826308 -1.4509894 -1.0308079 #> 9  -0.88393901 -2.3853446  1.1848098 #> 10  0.21690234 -1.6095687  1.7731621  ## categorize at 0 by default yhat <- categorize(M) yhat #>    V1_0 V2_0 V3_0 #> 1     0    0    1 #> 2     1    1    1 #> 3     1    0    0 #> 4     0    1    1 #> 5     1    1    0 #> 6     1    1    0 #> 7     1    0    0 #> 8     0    0    0 #> 9     0    0    1 #> 10    1    0    1  ## define multiple cutpoints to define multiple decision rules per marker C <- c(0, 1, 0, 1, 0, 1) a <- c(1, 1, 2, 2, 3, 3) categorize(M, C, a) #>    V1_0 V1_1 V2_0 V2_1 V3_0 V3_1 #> 1     0    0    0    0    1    1 #> 2     1    0    1    0    1    1 #> 3     1    0    0    0    0    0 #> 4     0    0    1    1    1    0 #> 5     1    0    1    0    0    0 #> 6     1    1    1    0    0    0 #> 7     1    0    0    0    0    0 #> 8     0    0    0    0    0    0 #> 9     0    0    0    0    1    1 #> 10    1    0    0    0    1    1   ## this can even be used to do multi-class classification, like this: C <- matrix(rep(c(-1, 0, 1, -2, 0, 2), 3), ncol = 3, byrow = TRUE) C #>      [,1] [,2] [,3] #> [1,]   -1    0    1 #> [2,]   -2    0    2 #> [3,]   -1    0    1 #> [4,]   -2    0    2 #> [5,]   -1    0    1 #> [6,]   -2    0    2 categorize(M, C, a) #>    V1_a V1_b V2_a V2_b V3_a V3_b #> 1     1    1    1    1    3    3 #> 2     2    2    2    2    3    3 #> 3     2    2    0    1    1    1 #> 4     1    1    3    2    2    2 #> 5     2    2    2    2    1    1 #> 6     3    3    2    2    0    0 #> 7     2    2    1    1    0    1 #> 8     1    1    0    1    0    1 #> 9     1    1    0    0    3    2 #> 10    2    2    0    1    3    2"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"compare","dir":"Articles","previous_headings":"Important functions","what":"compare()","title":"R package cases: overview","text":"supervised classification, assumed true set labels. medical testing, usually called reference standard provided established diagnostic/prognostic tool. need compare model predictions labels order compute model accuracy.","code":"## consider binary prediction from 3 models from previous r chunk names(yhat) <- paste0(\"rule\", 1:ncol(yhat)) yhat #>    rule1 rule2 rule3 #> 1      0     0     1 #> 2      1     1     1 #> 3      1     0     0 #> 4      0     1     1 #> 5      1     1     0 #> 6      1     1     0 #> 7      1     0     0 #> 8      0     0     0 #> 9      0     0     1 #> 10     1     0     1  ## assume true labels y <- c(rep(1, 5), rep(0, 5))  ## compare then results in compare(yhat, y) #> $specificity #>    rule1 rule2 rule3 #> 6      0     0     1 #> 7      0     1     1 #> 8      1     1     1 #> 9      1     1     0 #> 10     0     1     0 #>  #> $sensitivity #>   rule1 rule2 rule3 #> 1     0     0     1 #> 2     1     1     1 #> 3     1     0     0 #> 4     0     1     1 #> 5     1     1     0"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"evaluate","dir":"Articles","previous_headings":"Important functions","what":"evaluate()","title":"R package cases: overview","text":"Main function package details dta function provided last section","code":"evaluate(compare(yhat, y)) #> [cases] evaluation results: #> $specificity #>   parameter hypothesis estimate  lower  upper  tstat   pval reject pval_all #> 1     rule1     == 0.5      0.4 0.0080 0.7920 0.5000 0.6171  FALSE   0.6171 #> 2     rule2     == 0.5      0.8 0.4799 1.1201 1.8371 0.0662  FALSE   0.6171 #> 3     rule3     == 0.5      0.6 0.2080 0.9920 0.5000 0.6171  FALSE   0.6171 #>   reject_all #> 1      FALSE #> 2      FALSE #> 3      FALSE #>  #> $sensitivity #>   parameter hypothesis estimate lower upper tstat   pval reject pval_all #> 1     rule1     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #> 2     rule2     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #> 3     rule3     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #>   reject_all #> 1      FALSE #> 2      FALSE #> 3      FALSE"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"draw_data","dir":"Articles","previous_headings":"Important functions","what":"draw_data()","title":"R package cases: overview","text":"cases includes functions synthetic data generation Remark: Synthetic data comes ‘compared’ level meaning labels 1 0 indicate correct false predictions, respectively. need compare() addition.","code":"draw_data_lfc(n = 20) #> $specificity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      1      1      1      1      1      1       1 #>  [2,]      1      1      1      1      1      0      1      1      1       1 #>  [3,]      0      1      1      1      1      1      1      1      1       1 #>  [4,]      1      1      1      1      1      1      1      1      1       1 #>  [5,]      1      1      0      1      1      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      0      1      0       1 #>  [7,]      1      1      1      1      1      1      1      1      1       1 #>  [8,]      1      1      0      1      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      0      1      1      1       1 #> [10,]      1      1      1      1      1      1      1      1      1       1 #>  #> $sensitivity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      1      1      1      1      1      1       1 #>  [2,]      1      1      1      1      1      1      1      1      1       1 #>  [3,]      1      1      1      1      1      1      1      1      1       0 #>  [4,]      1      1      1      1      1      1      1      1      1       0 #>  [5,]      1      1      1      1      0      1      1      1      1       1 #>  [6,]      1      1      1      1      0      1      1      1      1       1 #>  [7,]      1      1      1      1      1      1      1      0      1       0 #>  [8,]      1      1      1      0      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      1      1      0      1       1 #> [10,]      1      1      1      1      1      1      1      1      1       0 #>  #> attr(,\"info\") #>      model     b  se  sp #> 1   model1  TRUE 1.0 0.8 #> 2   model2 FALSE 0.8 1.0 #> 3   model3  TRUE 1.0 0.8 #> 4   model4 FALSE 0.8 1.0 #> 5   model5 FALSE 0.8 1.0 #> 6   model6  TRUE 1.0 0.8 #> 7   model7  TRUE 1.0 0.8 #> 8   model8 FALSE 0.8 1.0 #> 9   model9  TRUE 1.0 0.8 #> 10 model10 FALSE 0.8 1.0 draw_data_roc(n = 20) #> $specificity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      0      1      0      1      1      1      1      1       1 #>  [2,]      1      1      1      1      1      1      1      1      1       1 #>  [3,]      0      1      1      1      1      1      1      1      1       1 #>  [4,]      0      0      1      0      1      1      1      1      1       1 #>  [5,]      1      1      1      0      0      1      1      1      1       1 #>  [6,]      1      1      0      1      1      1      1      1      1       1 #>  [7,]      0      1      1      1      1      1      1      1      1       1 #>  [8,]      1      1      0      0      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      1      1      1      1       1 #> [10,]      0      1      1      1      1      1      1      1      1       1 #>  #> $sensitivity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      0      1      1      1      1      1      1      1       0 #>  [2,]      1      0      0      0      0      0      0      0      0       0 #>  [3,]      1      0      1      1      1      1      1      1      0       0 #>  [4,]      1      1      1      1      1      1      1      1      1       1 #>  [5,]      1      1      1      1      1      1      1      1      1       1 #>  [6,]      1      0      1      1      1      1      1      1      1       1 #>  [7,]      1      1      1      1      1      1      1      1      1       1 #>  [8,]      1      1      1      1      1      1      1      1      1       1 #>  [9,]      0      1      1      1      1      1      1      1      1       1 #> [10,]      0      1      1      1      1      1      1      1      1       1 #>  #> attr(,\"info\") #>      model   auc    cutoff        se        sp #> 1   model1 0.850 0.7026076 0.7773072 0.7588499 #> 2   model2 0.875 0.9744355 0.7429298 0.8350798 #> 3   model3 0.900 0.7414402 0.8579035 0.7707867 #> 4   model4 0.925 0.6637751 0.9149729 0.7465829 #> 5   model5 0.925 0.8579379 0.8805752 0.8045366 #> 6   model6 0.950 0.5861100 0.9590761 0.7210992 #> 7   model7 0.950 0.9744355 0.9117706 0.8350798 #> 8   model8 0.950 1.0909332 0.8916296 0.8623489 #> 9   model9 0.950 1.1685983 0.8764814 0.8787172 #> 10 model10 0.950 1.4792588 0.8014789 0.9304644"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"common-workflows","dir":"Articles","previous_headings":"","what":"Common workflows","title":"R package cases: overview","text":"pipe operator ‘%>%’ allows us chain together subsequent operations R. useful, dta function expects preprocessed data indicating correct (1) false (0) predictions.","code":"M %>%   categorize() %>%   compare(y) %>%   evaluate() #> [cases] evaluation results: #> $specificity #>   parameter hypothesis estimate  lower  upper  tstat   pval reject pval_all #> 1      V1_0     == 0.5      0.4 0.0080 0.7920 0.5000 0.6171  FALSE   0.6171 #> 2      V2_0     == 0.5      0.8 0.4799 1.1201 1.8371 0.0662  FALSE   0.6171 #> 3      V3_0     == 0.5      0.6 0.2080 0.9920 0.5000 0.6171  FALSE   0.6171 #>   reject_all #> 1      FALSE #> 2      FALSE #> 3      FALSE #>  #> $sensitivity #>   parameter hypothesis estimate lower upper tstat   pval reject pval_all #> 1      V1_0     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #> 2      V2_0     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #> 3      V3_0     == 0.5      0.6 0.208 0.992   0.5 0.6171  FALSE   0.6171 #>   reject_all #> 1      FALSE #> 2      FALSE #> 3      FALSE"},{"path":[]},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"specification-of-hypotheses","dir":"Articles","previous_headings":"Multiple testing for co-primary endpoints","what":"Specification of hypotheses","title":"R package cases: overview","text":"R command gives overview function arguments evaluate function. comparator defines one classification rules consideration primary comparator benchmark pre-defined accuracy categorize subgroup Together implies hypotheses system considered, namely H0:∀g∀j:θjg≤θ0gH_0: \\forall g \\forall j: \\theta_j^g \\leq \\theta_0^g application primary interest, diagnostic accuracy studies, simplifies G=2G=2 θ1=Se\\theta_1 = Se θ2=Sp\\theta_2 =Sp indicating sensitivity specificity medical test classication rule. case aim reject global null hypothesis H0:∀j:Sej≤Se0∧Spj≤Sp0H_0: \\forall j: Se_j \\leq Se_0 \\wedge Sp_j \\leq Sp_0","code":"?evaluate"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"comparison-vs--confidence-regions","dir":"Articles","previous_headings":"Multiple testing for co-primary endpoints","what":"Comparison vs. confidence regions","title":"R package cases: overview","text":"following, highlight difference “co-primary” analysis (comparison regions) “full” analysis (confidence regions).   can see, comparison regions liberal compared confidence regions.","code":"set.seed(1337)  data <- draw_data_roc(   n = 120, prev = c(0.25, 0.75), m = 4,   delta = 0.05, e = 10, auc = seq(0.90, 0.95, 0.025), rho = c(0.25, 0.25) )  lapply(data, head) #> $specificity #>      model1 model2 model3 model4 #> [1,]      1      1      1      1 #> [2,]      0      0      1      1 #> [3,]      1      1      1      1 #> [4,]      1      1      1      1 #> [5,]      1      1      1      1 #> [6,]      1      1      1      1 #>  #> $sensitivity #>      model1 model2 model3 model4 #> [1,]      0      0      1      1 #> [2,]      1      1      1      1 #> [3,]      1      1      1      1 #> [4,]      1      1      0      0 #> [5,]      1      1      1      1 #> [6,]      1      1      1      1 ## comparison regions results_comp <- data %>% evaluate(   alternative = \"greater\",   alpha = 0.025,   benchmark = c(0.7, 0.8),   analysis = \"co-primary\",   regu = TRUE,   adj = \"maxt\" ) visualize(results_comp) ## confidence regions results_conf <- data %>% evaluate(   alternative = \"greater\",   alpha = 0.025,   benchmark = c(0.7, 0.8),   analysis = \"full\",   regu = TRUE,   adj = \"maxt\" ) visualize(results_conf)"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"real-data-example","dir":"Articles","previous_headings":"","what":"Real data example","title":"R package cases: overview","text":"second vignette shows application cases package Breast Cancer Wisconsin Diagnostic (wdbc) data set.","code":"vignette(\"example_wdbc\", \"cases\")"},{"path":"https://maxwestphal.github.io/cases/articles/package_overview.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"R package cases: overview","text":"Westphal M, Zapf . Statistical inference diagnostic test accuracy studies multiple comparisons. Statistical Methods Medical Research. 2024;0(0). doi:10.1177/09622802241236933","code":""},{"path":"https://maxwestphal.github.io/cases/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Westphal. Author, maintainer.","code":""},{"path":"https://maxwestphal.github.io/cases/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westphal M (2024). cases: Stratified Evaluation Subgroup Classification Accuracy. R package version 0.2.0, https://maxwestphal.github.io/cases/, https://github.com/maxwestphal/cases.","code":"@Manual{,   title = {cases: Stratified Evaluation of Subgroup Classification Accuracy},   author = {Max Westphal},   year = {2024},   note = {R package version 0.2.0, https://maxwestphal.github.io/cases/},   url = {https://github.com/maxwestphal/cases}, }"},{"path":"https://maxwestphal.github.io/cases/index.html","id":"cases-r-package-stratified-evaluation-of-subgroup-classification-accuracy","dir":"","previous_headings":"","what":"Stratified Evaluation of Subgroup Classification Accuracy","title":"Stratified Evaluation of Subgroup Classification Accuracy","text":"{cases} R package simultaneously assess classification accuracy multiple classifiers several subgroups (strata). instance, allows asses accuracy multiple candidate (index) diagnostic tests often measured sensitivity (accuracy diseased subgroup) specificity (accuracy healthy subgroup). widespread goal diagnostic accuracy studies -called co-primary analysis two endpoints, .e. show significant benefit (compared benchmark) sensitivity specificity least one candidate classifiers. package implements different methods multiplicity adjustment purpose (e.g. Bonferroni, maxT, pairs bootstrap). Theoretical background extensive simulation study explained paper Westphal & Zapf (2024).","code":""},{"path":"https://maxwestphal.github.io/cases/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stratified Evaluation of Subgroup Classification Accuracy","text":"install latest stable version CRAN, use following R command: can install latest development version GitHub :","code":"install.packages(\"cases\") # install.packages(\"remotes\") remotes::install_github(\"maxwestphal/cases\",   ref = \"development\",   build_vignettes = TRUE )"},{"path":"https://maxwestphal.github.io/cases/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Stratified Evaluation of Subgroup Classification Accuracy","text":"vignette explains basic functionality {cases} package can displayed follows: following vignette shows exemplary usage package context biomarker assessment prediction model evaluation:","code":"vignette(topic = \"package_overview\", package = \"cases\") vignette(topic = \"example_wdbc\", package = \"cases\")"},{"path":"https://maxwestphal.github.io/cases/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Stratified Evaluation of Subgroup Classification Accuracy","text":"Westphal M, Zapf . Statistical inference diagnostic test accuracy studies multiple comparisons. Statistical Methods Medical Research. 2024;0(0). doi:10.1177/09622802241236933","code":""},{"path":"https://maxwestphal.github.io/cases/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cases authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cases.html","id":null,"dir":"Reference","previous_headings":"","what":"cases package — cases","title":"cases package — cases","text":"Enables simultaneous statistical inference accuracy multiple classifiers multiple subgroups (strata). instance, allows perform multiple comparisons diagnostic accuracy studies co-primary endpoints sensitivity (true positive rate, TPR) specificity (true negative rate, TNR).","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cases package — cases","text":"package functionality syntax described vignettes, see examples.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cases.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"cases package — cases","text":"Westphal M, Zapf . Statistical inference diagnostic test accuracy studies multiple comparisons. Statistical Methods Medical Research. 2024;0(0). doi:10.1177/09622802241236933","code":""},{"path":[]},{"path":"https://maxwestphal.github.io/cases/reference/cases.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cases package — cases","text":"Maintainer: Max Westphal dev@maxwestphal.io (ORCID)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cases package — cases","text":"","code":"# overview over package functionality: vignette(\"package_overview\") #> Warning: vignette ‘package_overview’ not found  # a real-world data example: vignette(\"example_wdbc\") #> Warning: vignette ‘example_wdbc’ not found"},{"path":"https://maxwestphal.github.io/cases/reference/categorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize continuous values — categorize","title":"Categorize continuous values — categorize","text":"function allows split continuous values, e.g. (risk) scores (bio)markers, two categories specifying one cutoff values.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/categorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize continuous values — categorize","text":"","code":"categorize(   values,   cutoffs = rep(0, ncol(values)),   map = 1:ncol(values),   labels = NULL )"},{"path":"https://maxwestphal.github.io/cases/reference/categorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorize continuous values — categorize","text":"values (matrix)  numeric matrix continuous values categorized. Assume (n x r) matrix n observations (subjects) r continuous values. cutoffs (numeric | matrix)  numeric matrix dimension m x k. row cutoffs defines split k+1 distinct categories. row must contain distinct values. simplest case (k=1), cutoffs single column matrix whereby row defines binary split (<=t vs. >t). case (k=1), cutoffs can also numeric vector. map (numeric)  integer vector length k values 1:r, whereby r = ncol(values). map_l gives value column values categorized ... labels (character)  character length m (= number prediction r)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/categorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorize continuous values — categorize","text":"(matrix)  numeric (n x k) matrix categorical outcomes categorizing.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/categorize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorize continuous values — categorize","text":"","code":"set.seed(123) M <- as.data.frame(mvtnorm::rmvnorm(20, mean = rep(0, 3), sigma = 2 * diag(3))) M #>             V1          V2         V3 #> 1  -0.79263226 -0.32552013  2.2043464 #> 2   0.09971392  0.18284047  2.4254682 #> 3   0.65183395 -1.78906676 -0.9713566 #> 4  -0.63026120  1.73111308  0.5088536 #> 5   0.56677642  0.15652900 -0.7860781 #> 6   2.52707679  0.70406690 -2.7812167 #> 7   0.99186703 -0.66862802 -1.5101308 #> 8  -0.30826308 -1.45098941 -1.0308079 #> 9  -0.88393901 -2.38534456  1.1848098 #> 10  0.21690234 -1.60956869  1.7731621 #> 11  0.60311149 -0.41729409  1.2658988 #> 12  1.24186829  1.16189111  0.9738844 #> 13  0.78335786 -0.08755638 -0.4326965 #> 14 -0.53806725 -0.98246403 -0.2940394 #> 15 -1.78954068  3.06736694  1.7083162 #> 16 -1.58831539 -0.56976520 -0.6599503 #> 17  1.10303725 -0.11790166  0.3582465 #> 18 -0.04037121 -0.06062798  1.9354959 #> 19 -0.31928839  2.14461330 -2.1902672 #> 20  0.82676869  0.17515635  0.3053875 categorize(M) #>    V1_0 V2_0 V3_0 #> 1     0    0    1 #> 2     1    1    1 #> 3     1    0    0 #> 4     0    1    1 #> 5     1    1    0 #> 6     1    1    0 #> 7     1    0    0 #> 8     0    0    0 #> 9     0    0    1 #> 10    1    0    1 #> 11    1    0    1 #> 12    1    1    1 #> 13    1    0    0 #> 14    0    0    0 #> 15    0    1    1 #> 16    0    0    0 #> 17    1    0    1 #> 18    0    0    1 #> 19    0    1    0 #> 20    1    1    1 C <- matrix(rep(c(-1, 0, 1, -2, 0, 2), 3), ncol = 3, byrow = TRUE) C #>      [,1] [,2] [,3] #> [1,]   -1    0    1 #> [2,]   -2    0    2 #> [3,]   -1    0    1 #> [4,]   -2    0    2 #> [5,]   -1    0    1 #> [6,]   -2    0    2 w <- c(1, 1, 2, 2, 3, 3) categorize(M, C, w) #>    V1_a V1_b V2_a V2_b V3_a V3_b #> 1     1    1    1    1    3    3 #> 2     2    2    2    2    3    3 #> 3     2    2    0    1    1    1 #> 4     1    1    3    2    2    2 #> 5     2    2    2    2    1    1 #> 6     3    3    2    2    0    0 #> 7     2    2    1    1    0    1 #> 8     1    1    0    1    0    1 #> 9     1    1    0    0    3    2 #> 10    2    2    0    1    3    2 #> 11    2    2    1    1    3    2 #> 12    3    2    3    2    2    2 #> 13    2    2    1    1    1    1 #> 14    1    1    1    1    1    1 #> 15    0    1    3    3    3    2 #> 16    0    1    1    1    1    1 #> 17    3    2    1    1    2    2 #> 18    1    1    1    1    3    2 #> 19    1    1    3    3    0    0 #> 20    2    2    2    2    2    2"},{"path":"https://maxwestphal.github.io/cases/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare predictions and labels — compare","title":"Compare predictions and labels — compare","text":"Compare predictions labels","code":""},{"path":"https://maxwestphal.github.io/cases/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare predictions and labels — compare","text":"","code":"compare(   predictions,   labels,   partition = TRUE,   names = c(specificity = 0, sensitivity = 1) )"},{"path":"https://maxwestphal.github.io/cases/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare predictions and labels — compare","text":"predictions (numeric | character)  vector class predictions, class unique values+ need match labels. labels (numeric | character)  vector true class labels (reference standard) partition (logical)  result split one matrix per class (TRUE; default) (FALSE) names (character | NULL)  named character. Values specify data values, names specify class names. names=NULL, values names defined unique(labels)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare predictions and labels — compare","text":"(list | matrix)  list matrices (one unique value labels) values 1 (correct prediction) 0 (false prediction). partition=TRUE, matrices combined single matrix rbind.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare predictions and labels — compare","text":"","code":"pred <- matrix(c(1, 1, 0), 5, 3) labels <- c(1, 1, 0, 0, 1) compare(pred, labels, FALSE) #>   V1 V2 V3 #> 1  1  0  1 #> 2  1  1  0 #> 3  1  0  0 #> 4  0  1  0 #> 5  1  1  0 compare(pred, labels, TRUE) #> $specificity #>   V1 V2 V3 #> 3  1  0  0 #> 4  0  1  0 #>  #> $sensitivity #>   V1 V2 V3 #> 1  1  0  1 #> 2  1  1  0 #> 5  1  1  0 #>"},{"path":"https://maxwestphal.github.io/cases/reference/cormat_ar1.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AR(1) correlation matrix — cormat_ar1","title":"Create an AR(1) correlation matrix — cormat_ar1","text":"Create AR(1) correlation matrix","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cormat_ar1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AR(1) correlation matrix — cormat_ar1","text":"","code":"cormat_ar1(m, rho, d = TRUE)"},{"path":"https://maxwestphal.github.io/cases/reference/cormat_ar1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AR(1) correlation matrix — cormat_ar1","text":"m (numeric)  dimensions (square) matrix rho (numeric)  correlation parameter (0,1) d (logical | numeric)  binary vector length m, whereby TRUE/FALSE (alternatively 1/0) indicate active/inactive components underlying random vector.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cormat_ar1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AR(1) correlation matrix — cormat_ar1","text":"(matrix)  AR(1) correlation matrix R entries \\(R_{ij} = \\rho^{|-j|}\\)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cormat_equi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an equicorrelation matrix — cormat_equi","title":"Create an equicorrelation matrix — cormat_equi","text":"Create equicorrelation matrix","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cormat_equi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an equicorrelation matrix — cormat_equi","text":"","code":"cormat_equi(m, rho, d = TRUE)"},{"path":"https://maxwestphal.github.io/cases/reference/cormat_equi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an equicorrelation matrix — cormat_equi","text":"m (numeric)  dimensions (square) matrix rho (numeric)  correlation parameter (0,1) d (logical | numeric)  binary vector length m, whereby TRUE/FALSE (alternatively 1/0) indicate active/inactive components underlying random vector.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/cormat_equi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an equicorrelation matrix — cormat_equi","text":"(matrix)  AR(1) correlation matrix R entries \\(R_{ij} = \\rho, \\neq j\\)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"Dataset documentation can found source website references .","code":""},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"","code":"data_wdbc"},{"path":[]},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":"data-wdbc","dir":"Reference","previous_headings":"","what":"data_wdbc","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"data frame 569 rows (patients) 31 columns (1 target, 30 features).","code":""},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"https://archive.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+(diagnostic)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"ID variable removed. Diagnosis (1= malignant, 0 = benign). Feature variables renamed.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/data_wdbc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Breast Cancer Wisconsin (Diagnostic) Data Set — data_wdbc","text":"W.N. Street, W.H. Wolberg O.L. Mangasarian. Nuclear feature extraction breast tumor diagnosis. &T/SPIE 1993 International Symposium Electronic Imaging: Science Technology, volume 1905, pages 861-870, San Jose, CA, 1993. O.L. Mangasarian, W.N. Street W.H. Wolberg. Breast cancer diagnosis prognosis via linear programming. Operations Research, 43(4), pages 570-577, July-August 1995.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"Define contrast (matrix) specify exact hypothesis system","code":""},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"","code":"define_contrast(type = c(\"raw\", \"one\", \"all\"), comparator = NA)"},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"type (character)  either \"raw\", \"one\" \"\", see details. comparator (numeric | character)  either integer (index comparator) character (name comparator)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"(cases_contrast)  object passed evaluate","code":""},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"\"raw\" contrast: compare candidates specified benchmark values \"one\" ('vs. one' 'Dunnett') contrast: compare candidates single comparator. \"\" ('vs. ' 'Tukey') contrast: compare candidates .","code":""},{"path":"https://maxwestphal.github.io/cases/reference/define_contrast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a contrast (matrix) to specify exact hypothesis system — define_contrast","text":"","code":"define_contrast(\"one\", 1) #> >> cases_contrast object of type 'one' (comparator: 1) <<"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate binary data — draw_data","title":"Generate binary data — draw_data","text":"Generate binary data","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate binary data — draw_data","text":"","code":"draw_data(   n = 200,   prev = c(0.5, 0.5),   random = FALSE,   m = 10,   method = c(\"roc\", \"lfc\", \"pr\"),   pars = list(),   ... )"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate binary data — draw_data","text":"n (numeric)  integer, overall sample size prev (numeric)  vector class prevalences (adding 1) random (logical)  random sampling (TRUE) fixed group sample sizes (FALSE) m (numeric)  integer, number models method (character)  either \"roc\", \"lfc\" (multiple subgroups) \"prob\" (subgroups) pars (list)  containing named parameters passed draw_data_roc, draw_data_lfc ... ()  named parameters passed","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate binary data — draw_data","text":"(matrix)  generated binary data (possibly stratified subgroups)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate binary data — draw_data","text":"","code":"draw_data() #> $specificity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      0      1      1      1      1      1      1      1      1       1 #>  [2,]      1      1      1      0      0      1      1      1      1       1 #>  [3,]      0      0      1      1      1      1      1      1      1       1 #>  [4,]      1      1      1      0      0      1      1      1      1       1 #>  [5,]      1      1      1      0      0      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      1      1      1       1 #>  [7,]      0      0      0      1      1      1      1      1      1       1 #>  [8,]      1      1      1      1      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      1      1      1      1       1 #> [10,]      0      1      1      1      1      0      0      0      0       0 #> [11,]      0      0      1      0      1      1      1      1      1       1 #> [12,]      1      1      1      1      1      1      1      1      1       1 #> [13,]      1      1      1      1      1      1      1      1      1       1 #> [14,]      1      1      1      1      1      1      1      1      1       1 #> [15,]      1      1      1      1      1      1      1      1      1       1 #> [16,]      0      1      1      1      1      1      1      1      1       1 #> [17,]      1      1      1      1      1      1      1      1      1       1 #> [18,]      1      1      1      1      1      1      1      1      1       1 #> [19,]      1      1      1      1      1      1      1      1      1       1 #> [20,]      1      1      1      1      1      1      1      1      1       1 #> [21,]      1      1      1      1      1      1      1      1      1       1 #> [22,]      1      1      1      1      1      1      1      1      1       1 #> [23,]      0      1      1      0      0      1      1      1      1       1 #> [24,]      0      0      1      0      0      1      1      1      1       1 #> [25,]      1      1      1      1      1      1      1      1      1       1 #> [26,]      0      1      1      1      1      0      1      1      1       1 #> [27,]      1      1      1      1      1      1      1      1      1       1 #> [28,]      1      1      1      1      1      1      1      1      1       1 #> [29,]      0      0      1      0      1      0      0      0      1       1 #> [30,]      0      0      1      1      1      1      1      1      1       1 #> [31,]      1      1      1      1      1      1      1      1      1       1 #> [32,]      0      0      0      1      1      0      0      0      0       0 #> [33,]      1      1      1      1      1      1      1      1      1       1 #> [34,]      0      0      1      1      1      1      1      1      1       1 #> [35,]      0      1      0      1      1      1      1      1      1       1 #> [36,]      0      0      1      0      0      1      1      1      1       1 #> [37,]      0      0      0      1      1      1      1      1      1       1 #> [38,]      1      1      1      1      1      1      1      1      1       1 #> [39,]      1      1      1      1      1      1      1      1      1       1 #> [40,]      1      1      1      1      1      1      1      1      1       1 #> [41,]      1      1      1      1      1      1      1      1      1       1 #> [42,]      1      1      1      1      1      1      1      1      1       1 #> [43,]      1      1      1      1      1      0      1      1      1       1 #> [44,]      0      0      1      1      1      1      1      1      1       1 #> [45,]      1      1      1      1      1      0      0      0      0       0 #> [46,]      0      0      1      1      1      1      1      1      1       1 #> [47,]      1      1      1      1      1      1      1      1      1       1 #> [48,]      1      1      1      0      0      1      1      1      1       1 #> [49,]      1      1      0      1      1      0      0      0      0       0 #> [50,]      1      1      1      1      1      1      1      1      1       1 #>  #> $sensitivity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      0      0      1      0      0      0       0 #>  [2,]      1      1      1      1      1      1      1      1      1       1 #>  [3,]      0      0      1      1      0      1      1      1      1       0 #>  [4,]      1      1      0      1      1      1      1      1      1       1 #>  [5,]      1      1      1      1      1      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      1      1      1       1 #>  [7,]      1      1      1      1      1      1      1      1      1       1 #>  [8,]      1      1      1      1      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      1      1      0      0       0 #> [10,]      1      1      0      1      1      1      1      1      1       1 #> [11,]      1      1      0      1      1      1      1      1      1       1 #> [12,]      1      1      0      1      0      1      1      0      0       0 #> [13,]      1      1      1      1      1      1      1      1      1       1 #> [14,]      1      1      1      1      0      1      1      1      1       1 #> [15,]      1      1      1      1      1      0      0      0      0       0 #> [16,]      1      0      1      1      1      1      0      0      0       0 #> [17,]      1      1      0      0      0      0      0      0      0       0 #> [18,]      0      0      1      1      1      1      0      0      0       0 #> [19,]      1      1      1      1      0      1      1      1      1       1 #> [20,]      1      1      1      1      1      1      1      1      1       1 #> [21,]      1      1      0      1      1      1      1      1      1       1 #> [22,]      1      1      1      1      1      1      1      1      1       1 #> [23,]      1      1      1      1      1      1      1      1      1       1 #> [24,]      1      1      1      1      1      1      1      1      1       1 #> [25,]      1      1      1      1      0      1      1      1      1       1 #> [26,]      1      1      1      1      1      1      1      1      1       1 #> [27,]      1      1      1      0      0      0      0      0      0       0 #> [28,]      1      1      0      1      1      1      1      0      0       0 #> [29,]      1      1      1      1      1      1      1      1      1       1 #> [30,]      1      1      1      1      1      1      1      1      1       1 #> [31,]      1      1      1      1      1      1      1      1      1       1 #> [32,]      1      1      0      0      0      0      0      0      0       0 #> [33,]      1      1      1      1      1      1      1      1      1       1 #> [34,]      1      1      0      1      1      1      1      0      0       0 #> [35,]      1      1      1      1      1      1      1      1      1       1 #> [36,]      1      1      1      1      1      1      1      1      1       1 #> [37,]      1      1      1      0      0      1      1      1      1       1 #> [38,]      1      1      0      1      1      1      1      1      1       1 #> [39,]      1      1      1      1      1      1      1      1      1       1 #> [40,]      1      1      1      1      1      0      0      0      0       0 #> [41,]      1      1      1      1      1      1      1      1      1       1 #> [42,]      1      1      0      1      1      1      1      1      1       1 #> [43,]      1      1      1      1      0      1      1      1      1       1 #> [44,]      1      1      1      1      1      1      1      1      1       1 #> [45,]      1      1      1      1      1      1      1      1      1       1 #> [46,]      1      1      1      1      1      1      1      1      1       1 #> [47,]      1      1      1      1      1      1      1      1      1       1 #> [48,]      1      1      0      1      1      1      1      1      1       1 #> [49,]      1      0      0      0      0      1      1      1      1       1 #> [50,]      0      0      1      1      1      1      1      1      1       1 #>  #> attr(,\"info\") #>      model   auc    cutoff        se        sp #> 1   model1 0.875 0.4252305 0.8852425 0.6646657 #> 2   model2 0.875 0.6848175 0.8269094 0.7532704 #> 3   model3 0.900 1.0741979 0.7698004 0.8586330 #> 4   model4 0.925 1.0309334 0.8425206 0.8487140 #> 5   model5 0.925 1.2905203 0.7719502 0.9015650 #> 6   model6 0.950 1.0309334 0.9023814 0.8487140 #> 7   model7 0.950 1.2039913 0.8691077 0.8857035 #> 8   model8 0.950 1.2905203 0.8498182 0.9015650 #> 9   model9 0.950 1.3337848 0.8394962 0.9088628 #> 10 model10 0.950 1.4203138 0.8174952 0.9222418"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_lfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate binary data (LFC model) — draw_data_lfc","title":"Generate binary data (LFC model) — draw_data_lfc","text":"Generate binary data (LFC model)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_lfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate binary data (LFC model) — draw_data_lfc","text":"","code":"draw_data_lfc(   n = 100,   prev = c(0.5, 0.5),   random = FALSE,   m = 10,   se = 0.8,   sp = 0.8,   B = round(m/2),   L = 1,   Rse = diag(rep(1, m)),   Rsp = diag(rep(1, m)),   modnames = paste0(\"model\", 1:m),   ... )"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_lfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate binary data (LFC model) — draw_data_lfc","text":"n (numeric)  integer, total sample size prev (numeric)  disease healthy prevalence (length 2, adds 1) random (logical)  random sampling (TRUE) fixed prevalence (FALSE) m (numeric)  integer, number models se (numeric)  sensitivity (length 1) sp (numeric)  specificity (length 1) B (numeric)  integer, 1 m, specifies many sensitivity values projected 1 L (numeric)  worst alternative computed side condition Acc <= L (default value L=1 corresponds true LFC values projected 1) Rse (matrix)  correlation matrix empirical sensitivities (m x m) Rsp (maxtrix)  correlation matrix empirical specificities (m x m) modnames (modnames)  character, model names (length m) ... ()  arguments (currently unused)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_lfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate binary data (LFC model) — draw_data_lfc","text":"(list)  list matrices including generated binary datasets (1: correct prediction, 0: incorrect prediction) subgroup (specificity, sensitivity)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_lfc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate binary data (LFC model) — draw_data_lfc","text":"","code":"data <- draw_data_lfc() head(data) #> $specificity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      0      1      1      1      1      1       1 #>  [2,]      1      1      1      1      1      0      1      1      1       1 #>  [3,]      1      1      1      1      0      1      1      1      0       1 #>  [4,]      1      1      1      1      1      1      1      1      0       0 #>  [5,]      1      1      1      1      1      1      1      1      1       0 #>  [6,]      1      1      1      1      0      1      1      1      1       1 #>  [7,]      1      1      1      1      1      0      1      1      1       1 #>  [8,]      1      1      1      1      0      1      1      1      0       1 #>  [9,]      1      1      1      0      1      1      1      1      1       0 #> [10,]      1      1      1      1      1      0      1      1      1       0 #> [11,]      1      1      1      1      1      1      1      1      0       1 #> [12,]      1      1      1      1      0      0      1      1      1       1 #> [13,]      1      1      1      0      1      1      1      1      0       0 #> [14,]      1      1      1      1      1      1      1      1      1       1 #> [15,]      1      1      1      1      1      1      1      1      1       1 #> [16,]      1      1      1      1      1      1      1      1      1       0 #> [17,]      1      1      1      1      1      0      1      1      1       1 #> [18,]      1      1      1      1      1      1      1      1      1       1 #> [19,]      1      1      1      1      1      1      1      1      0       1 #> [20,]      1      1      1      1      1      1      1      1      1       1 #> [21,]      1      1      1      1      1      1      1      1      1       0 #> [22,]      1      1      1      0      0      0      1      1      1       1 #> [23,]      1      1      1      1      1      0      1      1      0       1 #> [24,]      1      1      1      1      1      1      1      1      0       1 #> [25,]      1      1      1      1      1      1      1      1      0       1 #> [26,]      1      1      1      1      1      1      1      1      0       1 #> [27,]      1      1      1      0      1      1      1      1      0       1 #> [28,]      1      1      1      1      0      1      1      1      1       1 #> [29,]      1      1      1      1      1      1      1      1      1       1 #> [30,]      1      1      1      1      1      1      1      1      1       0 #> [31,]      1      1      1      0      1      0      1      1      1       1 #> [32,]      1      1      1      1      1      1      1      1      1       1 #> [33,]      1      1      1      1      0      1      1      1      1       1 #> [34,]      1      1      1      1      1      1      1      1      1       1 #> [35,]      1      1      1      1      1      1      1      1      1       0 #> [36,]      1      1      1      1      1      1      1      1      1       1 #> [37,]      1      1      1      1      1      1      1      1      1       1 #> [38,]      1      1      1      1      1      0      1      1      1       1 #> [39,]      1      1      1      1      1      0      1      1      1       1 #> [40,]      1      1      1      1      1      1      1      1      1       0 #> [41,]      1      1      1      1      1      0      1      1      1       1 #> [42,]      1      1      1      1      1      1      1      1      1       1 #> [43,]      1      1      1      1      1      0      1      1      0       1 #> [44,]      1      1      1      1      0      0      1      1      1       1 #> [45,]      1      1      1      0      1      1      1      1      1       1 #> [46,]      1      1      1      1      1      1      1      1      1       1 #> [47,]      1      1      1      1      1      1      1      1      1       1 #> [48,]      1      1      1      1      1      1      1      1      1       0 #> [49,]      1      1      1      0      1      1      1      1      1       1 #> [50,]      1      1      1      1      1      0      1      1      0       0 #>  #> $sensitivity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      1      1      1      1      1      1       1 #>  [2,]      1      0      0      1      1      1      0      1      1       1 #>  [3,]      1      1      1      1      1      1      1      1      1       1 #>  [4,]      0      1      1      1      1      1      1      1      1       1 #>  [5,]      1      1      1      1      1      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      1      1      1       1 #>  [7,]      1      1      0      1      1      1      1      1      1       1 #>  [8,]      0      1      1      1      1      1      1      1      1       1 #>  [9,]      1      0      0      1      1      1      1      1      1       1 #> [10,]      0      1      1      1      1      1      1      0      1       1 #> [11,]      1      0      1      1      1      1      1      1      1       1 #> [12,]      1      1      1      1      1      1      1      1      1       1 #> [13,]      0      1      1      1      1      1      1      1      1       1 #> [14,]      0      1      1      1      1      1      1      0      1       1 #> [15,]      1      0      1      1      1      1      1      1      1       1 #> [16,]      1      1      1      1      1      1      1      0      1       1 #> [17,]      1      1      1      1      1      1      1      1      1       1 #> [18,]      1      1      1      1      1      1      1      1      1       1 #> [19,]      0      1      0      1      1      1      1      1      1       1 #> [20,]      1      0      1      1      1      1      1      1      1       1 #> [21,]      1      1      1      1      1      1      1      1      1       1 #> [22,]      1      1      1      1      1      1      1      1      1       1 #> [23,]      0      1      1      1      1      1      1      1      1       1 #> [24,]      1      1      1      1      1      1      1      1      1       1 #> [25,]      1      0      0      1      1      1      1      1      1       1 #> [26,]      1      1      1      1      1      1      0      1      1       1 #> [27,]      0      1      1      1      1      1      1      0      1       1 #> [28,]      1      1      0      1      1      1      1      1      1       1 #> [29,]      1      1      1      1      1      1      1      1      1       1 #> [30,]      0      0      1      1      1      1      1      1      1       1 #> [31,]      0      0      0      1      1      1      1      0      1       1 #> [32,]      1      1      1      1      1      1      1      1      1       1 #> [33,]      0      1      1      1      1      1      1      1      1       1 #> [34,]      1      1      0      1      1      1      1      1      1       1 #> [35,]      0      1      1      1      1      1      1      1      1       1 #> [36,]      1      0      1      1      1      1      1      0      1       1 #> [37,]      0      1      1      1      1      1      0      1      1       1 #> [38,]      1      1      1      1      1      1      1      1      1       1 #> [39,]      1      0      1      1      1      1      1      1      1       1 #> [40,]      1      0      1      1      1      1      1      1      1       1 #> [41,]      1      1      1      1      1      1      0      1      1       1 #> [42,]      1      1      1      1      1      1      1      0      1       1 #> [43,]      1      0      1      1      1      1      1      0      1       1 #> [44,]      1      1      1      1      1      1      1      0      1       1 #> [45,]      1      1      1      1      1      1      1      0      1       1 #> [46,]      0      1      1      1      1      1      1      1      1       1 #> [47,]      1      1      0      1      1      1      1      1      1       1 #> [48,]      1      1      1      1      1      1      1      1      1       1 #> [49,]      1      1      1      1      1      1      1      0      1       1 #> [50,]      0      1      1      1      1      1      1      1      1       1 #>"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_prb.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample binary data (single sample) — draw_data_prb","title":"Sample binary data (single sample) — draw_data_prb","text":"function wrapper rmvbin.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_prb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample binary data (single sample) — draw_data_prb","text":"","code":"draw_data_prb(n = 100, pr = c(0.8, 0.8), R = diag(length(pr)))"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_prb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample binary data (single sample) — draw_data_prb","text":"n (numeric)  integer, sample size pr (numeric)  vector marginal success probabilities R (matrix)  square correlation matrix","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_prb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample binary data (single sample) — draw_data_prb","text":"(matrix)  matrix n rows length(pr) columns randomly generated binary (0, 1) data","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate binary data (ROC model) — draw_data_roc","title":"Generate binary data (ROC model) — draw_data_roc","text":"Generate binary data (ROC model)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate binary data (ROC model) — draw_data_roc","text":"","code":"draw_data_roc(   n = 100,   prev = c(0.5, 0.5),   random = FALSE,   m = 10,   auc = seq(0.85, 0.95, length.out = 5),   rho = c(0.25, 0.25),   dist = c(\"normal\", \"exponential\"),   e = 10,   k = 100,   delta = 0,   modnames = paste0(\"model\", 1:m),   corrplot = FALSE,   ... )"},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate binary data (ROC model) — draw_data_roc","text":"n (numeric)  total sample size prev (numeric)  disease healthy prevalence (adds 1) random (logical)  random sampling (TRUE) fixed prevalence (FALSE) m (numeric)  integer, number models auc (numeric)  vector AUCs biomarkers rho (numeric)  vector (length 2) correlations biomarkers dist (character)  either \"normal\" \"exponential\" specifying subgroup biomarker distributions e (numeric)  emulates better (worse) model selection quality higher (lower) values e k (numeric)  technical parameter adjusts grid size delta (numeric)  specify importance sensitivity specificity (default 0) modnames (character)  model names (length m) corrplot (logical)  TRUE return data instead plot correlation matrices final binary data  (default: FALSE) ... ()  arguments (currently unused)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate binary data (ROC model) — draw_data_roc","text":"(list)  list matrices including generated binary datasets (1: correct prediction, 0: incorrect prediction) subgroup (specificity, sensitivity)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/draw_data_roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate binary data (ROC model) — draw_data_roc","text":"","code":"data <- draw_data_roc() head(data) #> $specificity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      0      1      1      1      1      0      0      1      1       1 #>  [2,]      1      1      1      1      1      1      1      1      1       1 #>  [3,]      1      1      1      1      1      1      1      1      1       1 #>  [4,]      1      1      1      1      1      1      1      1      1       1 #>  [5,]      1      1      1      1      1      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      1      1      1       1 #>  [7,]      0      0      1      1      1      0      0      0      0       0 #>  [8,]      1      1      1      1      1      0      0      0      0       0 #>  [9,]      0      1      1      1      1      1      1      1      1       1 #> [10,]      0      1      1      1      1      1      1      1      1       1 #> [11,]      1      1      1      1      1      1      1      1      1       1 #> [12,]      1      1      1      1      1      1      1      1      1       1 #> [13,]      0      1      1      1      1      1      1      1      1       1 #> [14,]      0      1      1      1      1      1      1      1      1       1 #> [15,]      0      1      1      1      1      1      1      1      1       1 #> [16,]      1      1      1      1      1      1      1      1      1       1 #> [17,]      1      1      1      1      1      0      0      1      1       1 #> [18,]      1      1      1      1      1      1      1      1      1       1 #> [19,]      0      1      1      1      1      1      1      1      1       1 #> [20,]      0      1      1      1      1      1      1      1      1       1 #> [21,]      0      1      1      1      1      0      0      0      0       0 #> [22,]      1      1      1      1      1      0      1      1      1       1 #> [23,]      1      1      1      1      1      1      1      1      1       1 #> [24,]      1      1      1      1      1      1      1      1      1       1 #> [25,]      0      1      1      1      1      1      1      1      1       1 #> [26,]      1      1      1      1      1      0      0      0      0       0 #> [27,]      0      1      1      1      1      1      1      1      1       1 #> [28,]      0      1      1      1      1      1      1      1      1       1 #> [29,]      0      1      1      1      1      1      1      1      1       1 #> [30,]      1      1      1      1      1      1      1      1      1       1 #> [31,]      1      1      1      1      1      1      1      1      1       1 #> [32,]      1      1      1      1      1      0      1      1      1       1 #> [33,]      0      1      1      1      1      0      1      1      1       1 #> [34,]      0      0      0      1      1      0      1      1      1       1 #> [35,]      0      1      1      1      1      1      1      1      1       1 #> [36,]      0      1      1      1      1      1      1      1      1       1 #> [37,]      0      0      0      1      1      0      0      0      0       0 #> [38,]      0      1      1      1      1      1      1      1      1       1 #> [39,]      0      1      1      1      1      1      1      1      1       1 #> [40,]      1      1      1      1      1      1      1      1      1       1 #> [41,]      1      1      1      1      1      1      1      1      1       1 #> [42,]      1      1      1      1      1      0      0      0      0       0 #> [43,]      1      1      1      1      1      0      1      1      1       1 #> [44,]      1      1      1      1      1      0      0      1      1       1 #> [45,]      0      1      1      1      1      0      0      0      0       0 #> [46,]      1      1      1      1      1      1      1      1      1       1 #> [47,]      0      1      1      1      1      1      1      1      1       1 #> [48,]      1      1      1      1      1      1      1      1      1       1 #> [49,]      0      1      1      1      1      1      1      1      1       1 #> [50,]      1      1      1      1      1      0      0      0      0       0 #>  #> $sensitivity #>       model1 model2 model3 model4 model5 model6 model7 model8 model9 model10 #>  [1,]      1      1      1      1      1      1      1      1      1       1 #>  [2,]      1      1      1      1      1      1      1      1      1       1 #>  [3,]      0      1      1      1      1      1      1      1      0       0 #>  [4,]      1      0      0      0      0      1      1      1      1       1 #>  [5,]      1      1      1      0      0      1      1      1      1       1 #>  [6,]      1      1      1      1      1      1      1      1      1       1 #>  [7,]      0      1      1      1      1      1      1      1      1       1 #>  [8,]      0      1      1      1      1      1      1      1      1       1 #>  [9,]      1      1      1      1      1      1      1      1      1       1 #> [10,]      1      0      0      0      0      1      1      1      1       1 #> [11,]      1      1      1      1      1      1      1      1      1       1 #> [12,]      1      0      0      0      0      1      1      1      1       1 #> [13,]      1      0      0      0      0      1      1      1      1       1 #> [14,]      1      1      1      1      1      1      1      1      1       1 #> [15,]      1      1      1      1      1      1      1      1      1       1 #> [16,]      1      1      1      1      1      1      1      1      1       1 #> [17,]      1      1      1      1      1      1      1      1      1       1 #> [18,]      1      1      1      0      0      1      1      1      1       1 #> [19,]      1      1      1      0      0      0      0      0      0       0 #> [20,]      1      1      1      1      1      1      1      1      1       1 #> [21,]      1      1      1      1      1      1      1      1      1       1 #> [22,]      0      1      0      0      0      1      1      1      1       1 #> [23,]      1      1      1      1      1      1      1      1      1       1 #> [24,]      1      0      0      0      0      1      1      1      1       1 #> [25,]      1      1      1      1      1      1      1      1      1       1 #> [26,]      1      1      1      1      1      1      1      1      1       1 #> [27,]      1      1      1      1      1      1      1      1      1       1 #> [28,]      1      1      1      1      1      1      1      1      1       1 #> [29,]      1      1      1      1      1      1      1      1      1       1 #> [30,]      0      0      0      0      0      1      1      1      1       1 #> [31,]      1      1      1      0      0      1      1      1      1       1 #> [32,]      1      1      1      1      1      1      1      1      1       1 #> [33,]      0      1      1      1      1      0      0      0      0       0 #> [34,]      1      1      1      1      1      1      1      1      1       1 #> [35,]      1      1      1      1      1      1      1      1      1       1 #> [36,]      1      1      1      1      1      1      1      1      1       1 #> [37,]      1      1      1      1      1      1      1      1      1       1 #> [38,]      1      1      1      1      1      1      1      1      1       1 #> [39,]      1      1      1      1      1      1      1      1      1       1 #> [40,]      1      1      1      1      1      1      1      1      1       1 #> [41,]      1      1      1      1      1      1      1      1      1       1 #> [42,]      1      1      1      1      1      1      1      1      1       1 #> [43,]      0      0      0      0      0      1      1      1      1       1 #> [44,]      0      1      1      0      0      1      1      1      1       1 #> [45,]      1      1      1      1      1      1      1      1      1       1 #> [46,]      1      1      1      1      1      1      1      1      1       1 #> [47,]      1      1      1      1      1      1      1      1      1       1 #> [48,]      1      1      1      1      1      1      1      1      1       1 #> [49,]      1      1      1      1      1      1      1      1      1       1 #> [50,]      1      1      1      1      1      1      1      1      1       1 #>"},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"Assess classification accuracy multiple classifcation rules stratified subgroups, e.g. diseased (sensitivity) healthy (specificity) individuals.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"","code":"evaluate(   data,   contrast = define_contrast(\"raw\"),   benchmark = 0.5,   alpha = 0.05,   alternative = c(\"two.sided\", \"greater\", \"less\"),   adjustment = c(\"none\", \"bonferroni\", \"maxt\", \"bootstrap\", \"mbeta\"),   transformation = c(\"none\", \"logit\", \"arcsin\"),   analysis = c(\"co-primary\", \"full\"),   regu = FALSE,   pars = list(),   ... )"},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"data (list)  n_g x m binary matrix data.frame (n_g observations m binary decisions), g index subgroups/classes, usually created via compare. contrast (cases_contrast)  specified via define_contrast benchmark (numeric)  value compare (RHS), length data. alpha (numeric)  significance level (default: 0.05) alternative (character)  specification alternative hypothesis adjustment (character)  specification statistical adjustment taken address multiplicity. default 'none' perform adjustment multiplicity. transformation (character)  define transformation ensure results (e.g. point estimates, confidence limits) lie unit interval (\"none\" (default), \"logit\", \"arcsin\" (sqrt)) analysis (character)  \"co-primary\" \"full\" regu (numeric | logical)  vector length 3, specify type shrinkage. Alternatively, logical length one (TRUE := c(1, 1/2, 1/4), FALSE := c(0, 0, 0)) pars (list)  parameters given named list list(type=\"pairs\", nboot=2000) ... ()  additional named parameters, can used instead (conjunction ) pars","code":""},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"(cases_results)  list analysis results including (adjusted) confidence intervals p-values","code":""},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"Adjustment methods (adjustment) additional parameters (pars ...): \"none\" (default): adjustment multiplicity \"bonferroni\": Bonferroni adjustment \"maxt\": maxT adjustment, based multivariate normal approximation vector test statistics \"bootstrap\": Bootstrap approach nboot: number bootstrap draws (default: 2000) type: type bootstrap, \"pairs\" (default) \"wild\" dist: residual distribution wild bootstrap, \"Normal\" (default) \"Rademacher\" proj_est: bootstrapped estimates wild bootstrap projected unit interval? (default: TRUE) res_tra: type residual transformation wild boostrap, 0,1,2 3 (default: 0 = transformation) (details res_tra options, see presentation James G. MacKinnon (2012) references therein) \"mbeta\": heuristic Bayesian approach based multivariate beta-binomial model. nrep: number posterior draws (default: 5000) lfc_pr: prior probability 'least-favorable parameter configuration' (default: 1 analysis == \"co-primary\", 0 analysis == \"full\").","code":""},{"path":"https://maxwestphal.github.io/cases/reference/evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate the accuracy of multiple (candidate) classifiers in several subgroups — evaluate","text":"","code":"# data <- draw_data_roc() evaluate(data) #> [cases] evaluation results: #> $specificity #>    parameter hypothesis estimate  lower  upper   tstat   pval reject pval_all #> 1     model1     == 0.5     0.76 0.6428 0.8772  4.3476 0.0000   TRUE   0.0000 #> 2     model2     == 0.5     0.74 0.6196 0.8604  3.9075 0.0001   TRUE   0.0001 #> 3     model3     == 0.5     0.80 0.6902 0.9098  5.3561 0.0000   TRUE   0.0000 #> 4     model4     == 0.5     0.84 0.7394 0.9406  6.6231 0.0000   TRUE   0.0000 #> 5     model5     == 0.5     0.88 0.7908 0.9692  8.3510 0.0000   TRUE   0.0000 #> 6     model6     == 0.5     0.96 0.9062 1.0138 16.7640 0.0000   TRUE   0.0018 #> 7     model7     == 0.5     0.68 0.5520 0.8080  2.7557 0.0059   TRUE   0.0059 #> 8     model8     == 0.5     0.84 0.7394 0.9406  6.6231 0.0000   TRUE   0.0000 #> 9     model9     == 0.5     0.94 0.8748 1.0052 13.2312 0.0000   TRUE   0.0000 #> 10   model10     == 0.5     0.96 0.9062 1.0138 16.7640 0.0000   TRUE   0.0000 #>    reject_all #> 1        TRUE #> 2        TRUE #> 3        TRUE #> 4        TRUE #> 5        TRUE #> 6        TRUE #> 7        TRUE #> 8        TRUE #> 9        TRUE #> 10       TRUE #>  #> $sensitivity #>    parameter hypothesis estimate  lower  upper   tstat   pval reject pval_all #> 1     model1     == 0.5     0.78 0.6663 0.8937  4.8271 0.0000   TRUE   0.0000 #> 2     model2     == 0.5     0.88 0.7908 0.9692  8.3510 0.0000   TRUE   0.0001 #> 3     model3     == 0.5     0.78 0.6663 0.8937  4.8271 0.0000   TRUE   0.0000 #> 4     model4     == 0.5     0.90 0.8177 0.9823  9.5219 0.0000   TRUE   0.0000 #> 5     model5     == 0.5     0.88 0.7908 0.9692  8.3510 0.0000   TRUE   0.0000 #> 6     model6     == 0.5     0.70 0.5742 0.8258  3.1168 0.0018   TRUE   0.0018 #> 7     model7     == 0.5     0.92 0.8455 0.9945 11.0559 0.0000   TRUE   0.0059 #> 8     model8     == 0.5     0.86 0.7648 0.9552  7.4093 0.0000   TRUE   0.0000 #> 9     model9     == 0.5     0.84 0.7394 0.9406  6.6231 0.0000   TRUE   0.0000 #> 10   model10     == 0.5     0.80 0.6902 0.9098  5.3561 0.0000   TRUE   0.0000 #>    reject_all #> 1        TRUE #> 2        TRUE #> 3        TRUE #> 4        TRUE #> 5        TRUE #> 6        TRUE #> 7        TRUE #> 8        TRUE #> 9        TRUE #> 10       TRUE #>"},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_lfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","title":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","text":"Generates (simulation) instance, list multiple datasets processed (analyzed) process_instance. Ground truth parameters (Sensitvity & Specificity) least-favorable sense type-error rate subsequently applied multiple test procedures maximized. function needed simulation via batchtools, relevant interactive use!","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_lfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","text":"","code":"generate_instance_lfc(   nrep = 10,   n = 100,   prev = 0.5,   random = FALSE,   m = 10,   se = 0.8,   sp = 0.8,   L = 1,   rhose = 0,   rhosp = 0,   cortype = \"equi\",   ...,   data = NULL,   job = NULL )"},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_lfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","text":"nrep (numeric)  integer, number instances n (numeric)  integer, total sample size prev (numeric)  disease prevalence random (logical)  fixed prevalence (FALSE) simple random sampling (TRUE) m (numeric)  integer, number candidates se (numeric)  sensitivity sp (numeric)  specificity L (numeric)  worst alternative computed side condition Acc <= L rhose (numeric)  correlation parameter sensitivity rhosp (numeric)  correlation parameter specificity cortype (character)   correlation type (\"equi\" \"ak1\") ... ()  (named) arguments data (NULL)  ignored (batchtools compatibility) job (NULL)  ignored (batchtools compatibility)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_lfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","text":"(list)  single (LFC) simulation instance length nrep","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_lfc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate data sets under least favorable parameter configurations — generate_instance_lfc","text":"Utilizes arguments draw_data_lfc unless mentioned otherwise .","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data sets under realistic parameter configurations — generate_instance_roc","title":"Generate data sets under realistic parameter configurations — generate_instance_roc","text":"Generates (simulation) instance, list multiple datasets processed (analyzed) process_instance. Ground truth parameters (Sensitvity & Specificity) initially generated according generative model whereby multiple decision rules (different parameter values) derived thresholding multiple biomarkers. function needed simulation via batchtools, relevant interactive use!","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data sets under realistic parameter configurations — generate_instance_roc","text":"","code":"generate_instance_roc(   nrep = 10,   n = 100,   prev = 0.5,   random = FALSE,   m = 10,   auc = \"seq(0.85, 0.95, length.out = 5)\",   rhose = 0.5,   rhosp = 0.5,   dist = \"normal\",   e = 10,   k = 100,   delta = 0,   ...,   data = NULL,   job = NULL )"},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data sets under realistic parameter configurations — generate_instance_roc","text":"nrep (numeric)  integer, number instances n (numeric)  integer, total sample size prev (numeric)  disease prevalence random (logical)  fixed prevalence (FALSE) simple random sampling (TRUE) m (numeric)  integer, number candidates auc (numeric)  vector AUCs biomarkers rhose (numeric)  correlation parameter sensitivity rhosp (numeric)  correlation parameter specificity dist (character)  either \"normal\" \"exponential\" specifying subgroup biomarker distributions e (numeric)  emulates better (worse) model selection quality higher (lower) values e k (numeric)  technical parameter adjusts grid size delta (numeric)  specify importance sensitivity specificity (default 0: equal importance) ... ()  arguments data (NULL)  ignored (batchtools compatibility) job (NULL)  ignored (batchtools compatibility)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data sets under realistic parameter configurations — generate_instance_roc","text":"(list)  single (ROC) simulation instance length nrep","code":""},{"path":"https://maxwestphal.github.io/cases/reference/generate_instance_roc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate data sets under realistic parameter configurations — generate_instance_roc","text":"Utilizes arguments draw_data_roc unless mentioned otherwise .","code":""},{"path":"https://maxwestphal.github.io/cases/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://maxwestphal.github.io/cases/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://maxwestphal.github.io/cases/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value piped rhs rhs function applied first argument lhs","code":""},{"path":"https://maxwestphal.github.io/cases/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result rhs(lhs, ...)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/process_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze simulated synthetic datasets. — process_instance","title":"Analyze simulated synthetic datasets. — process_instance","text":"Process data instances, list multiple datasets generated via generate_instance_lfc generate_instance_roc. function applies evaluate datasets. function needed simulation via batchtools, relevant interactive use!","code":""},{"path":"https://maxwestphal.github.io/cases/reference/process_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze simulated synthetic datasets. — process_instance","text":"","code":"process_instance(   instance = NULL,   contrast = \"cases::define_contrast('raw', NA)\",   benchmark = 0.5,   alpha = 0.05,   alternative = \"greater\",   adjustment = \"none\",   transformation = \"none\",   analysis = \"co-primary\",   regu = \"c(1,1/2,1/4)\",   pars = \"list()\",   ...,   data = NULL,   job = list(id = NA) )"},{"path":"https://maxwestphal.github.io/cases/reference/process_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze simulated synthetic datasets. — process_instance","text":"instance (list)  generated via generate_instance_lfc generate_instance_roc. contrast (cases_contrast)  specified via define_contrast benchmark (numeric)  value compare (RHS), length data length one benchmark values identical. alpha (numeric)  significance level (default: 0.05) alternative (character)  specify alternative hypothesis adjustment (character)  specify type statistical adjustment taken address multiplicity transformation (character)  define transformation ensure results (e.g. point estimates, confidence limits) lie unit interval (\"none\" (default) \"logit\") analysis (character)   \"co-primary\" (default; option currently) regu (numeric | logical)  vector length 3, specify type shrinkage. Alternatively, logical length one (TRUE := c(2, 1, 1/2), FALSE := c(0, 0, 0)) pars (list)  parameters given named list ... ()  additional named parameters data (NULL)  ignored (batchtools compatibility) job (NULL)  batchtools compatibility, change","code":""},{"path":"https://maxwestphal.github.io/cases/reference/process_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze simulated synthetic datasets. — process_instance","text":"(list)  standardized evaluation results","code":""},{"path":"https://maxwestphal.github.io/cases/reference/process_instance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze simulated synthetic datasets. — process_instance","text":"Utilizes arguments evaluate unless mentioned otherwise .","code":""},{"path":"https://maxwestphal.github.io/cases/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize evaluation results — visualize","title":"Visualize evaluation results — visualize","text":"Currently, implementation intended situations ... two groups (e.g. healthy (<-> specificity) diseased (<-> sensitivity)) alternative = \"greater\" contrast = define_contrast(\"raw)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize evaluation results — visualize","text":"","code":"visualize(x, ...)"},{"path":"https://maxwestphal.github.io/cases/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize evaluation results — visualize","text":"x cases_results  produced evaluate ...  arguments (currently ignored)","code":""},{"path":"https://maxwestphal.github.io/cases/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize evaluation results — visualize","text":"ggplot","code":""},{"path":"https://maxwestphal.github.io/cases/news/index.html","id":"cases-020","dir":"Changelog","previous_headings":"","what":"cases 0.2.0","title":"cases 0.2.0","text":"Added NEWS.md file track changes package. Improved documentation (style, contents) functions. Added pkgdown site maxwestphal.github.io/cases/ Bugfixes several types analyses utilized (simulation study) far, mainly concerned evaluate arguments analysis=\"full\" alternative=\"two.sided\"","code":""}]
